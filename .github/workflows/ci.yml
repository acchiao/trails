name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          DEFAULT_BRANCH: main
          DISABLE_ERRORS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        environment: [staging, production]
    environment:
      name: ${{ matrix.environment }}
      url: https://localhost:3000
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        # if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: registry.hub.docker.com
          username: ${{ secrets.REGISTRY_NAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - uses: docker/metadata-action@v3
        id: meta
        if: ${{ github.ref == 'refs/heads/main' }}
        # if: ${{ github.event_name != 'pull_request' }}
        with:
          images: |
            registry.hub.docker.com/acchiao/trails
          flavor: |
            latest=true
            prefix=
            suffix=
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=semver,pattern=v{{version}}
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=sha,prefix=,suffix=,format=long
            type=sha,prefix=,suffix=,format=short
            type=raw,value=${{ matrix.environment }}
      - uses: docker/build-push-action@v2
        id: build
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          # push: ${{ github.event_name != 'pull_request' }}
          target: ${{ matrix.environment }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - run: echo ${{ steps.build.outputs.digest }}

  codeql:
    name: CodeQL
    runs-on: ubuntu-20.04
    # needs: [build]
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ javascript ]
    steps:
      - uses: actions/checkout@v2
      - uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/autobuild@v1
      - uses: github/codeql-action/analyze@v1

  brakeman:
    name: Brakeman
    runs-on: ubuntu-20.04
    # needs: [build]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1
    - run: |
        wget -qO- https://ipecho.net/plain ; echo
        gem install brakeman --version $BRAKEMAN_VERSION
      env:
        BRAKEMAN_VERSION: 5.2
    - run: |
        brakeman -f sarif -o output.sarif.json .
      continue-on-error: true
    - uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: output.sarif.json
    - uses: actions/upload-artifact@v2
      with:
        name: output.sarif.json
        path: output.sarif.json
        if-no-files-found: warn
        retention-days: 90

  rubocop:
    name: RuboCop
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
    - run: bundle add code-scanning-rubocop --skip-install
    - run: bundle install
    - run: |
        bash -c "
          bundle exec rubocop --require code_scanning --format CodeScanning::SarifFormatter -o rubocop.sarif
          [[ $? -ne 2 ]]
        "
    - uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: rubocop.sarif
    - uses: actions/upload-artifact@v2
      with:
        name: rubocop.sarif
        path: rubocop.sarif
        if-no-files-found: warn
        retention-days: 90

  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [build, codeql, brakeman]
    if: ${{ github.ref == 'refs/heads/main' }}
    # if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        with:
          release-type: simple
          package-name: release-please-action
