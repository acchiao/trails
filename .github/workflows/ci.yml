name: ci

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-20.04
    environment: default
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          target: app
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/trails:buildcache
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/trails:buildcache,mode=max
          tags: |
            ${{ github.repository_owner }}/trails:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/trails:latest
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/trails:latest
            ghcr.io/${{ github.repository_owner }}/trails:latest

      - name: Image Digest
        run: echo ${{ steps.build.outputs.digest }}

  lint:
    name: Lint Codebase
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Codebase
        uses: github/super-linter@v4
        continue-on-error: true
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  codeql:
    name: Run CodeQL Analysis
    runs-on: ubuntu-20.04
    environment: default
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Run Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  snyk:
    name: Run Snyk Container Scan
    runs-on: ubuntu-20.04
    environment: default
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Image
        run: docker image build --tag trails:latest .

      - name: Run Snyk Container Scan
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: trails:latest
          args: --file=Dockerfile

      - name: Upload Result
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
